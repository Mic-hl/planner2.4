@use 'sass:color';
@use 'variables';

// Add a border to an element
@mixin border() {
    border: variables.$border-width solid variables.$border-color;
    border-radius: variables.$border-radius;
}

// Make the element a flexbox
@mixin flex($align: stretch, $justify: flex-start, $direction: row, $wrap: nowrap, $gap: null) {
    align-items: $align;
    display: flex;
    flex-direction: $direction;
    flex-wrap: $wrap;
    justify-content: $justify;

    @if $gap != null {
        gap: $gap;
    }
}

// Create spacing
@mixin spacing() {
    margin-left: auto;
    margin-right: auto;
    max-width: variables.$width-standard;
    padding-left: variables.$spacer-md;
    padding-right: variables.$spacer-md;

    @media screen and (min-width: variables.$screen-md) {
        padding-left: calc(variables.$spacer-md * 1.5);
        padding-right: calc(variables.$spacer-md * 1.5);
    }

    @media screen and (min-width: variables.$screen-lg) {
        padding-left: variables.$spacer-lg;
        padding-right: variables.$spacer-lg;
    }
}

// Create a button
@mixin button($color: variables.$color-primary) {
    @include border();
    background: $color;
    color: inherit;
    cursor: pointer;
    display: inline-block;
    font-size: inherit;
    height: 100%;
    min-width: 5rem;
    padding: 0.5rem;
    text-align: center;
    text-decoration: none;

    &:hover {
        background: color.scale($color, $lightness: -21%);
        color: #ffffff;
    }
}

@mixin transition() {
    transition-duration: 150ms;
    transition-property: color, background-color, border-color, text-decoration-color, fill, stroke, opacity, box-shadow, transform, filter, backdrop-filter, -webkit-backdrop-filter;
    transition-timing-function: cubic-bezier(0.4, 0, 0.2, 1);
}
